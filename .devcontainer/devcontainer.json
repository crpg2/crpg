// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/dotnet
{
  "name": "C# (.NET)",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "VARIANT": "9.0", // https://mcr.microsoft.com/v2/vscode/devcontainers/dotnet/tags/list
      "NODE_VERSION": "lts/*" // https://mcr.microsoft.com/v2/vscode/devcontainers/typescript-node/tags/list
    }
  },
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "editorconfig.editorconfig",
        "dbaeumer.vscode-eslint",
        "eamodio.gitlens",
        "Vue.volar",
        "antfu.goto-alias",
        "bradlc.vscode-tailwindcss",
        "naumovs.color-highlight",
        "streetsidesoftware.code-spell-checker",
        "cweijan.vscode-database-client2",
        "ms-dotnettools.csdevkit"
      ],
      "settings": {
        "tailwindCSS.experimental.classRegex": [
          [
            "/\\*@tw\\*/ ([^;]*);",
            "'([^']*)'"
          ]
        ],
        "typescript.preferences.autoImportFileExcludePatterns": [
          "vue-router" // ref: https://github.com/posva/unplugin-vue-router#setup
        ],
        "files.associations": {
          "*.css": "tailwindcss"
        },
        "editor.quickSuggestions": {
          "strings": true
        },
        "editor.formatOnSave": true,
        "eslint.format.enable": true,
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "prettier.enable": false,
        "editor.codeActionsOnSave": {
          "source.fixAll": "never",
          "source.fixAll.eslint": "explicit",
          "source.organizeImports": "never"
        },
        "cSpell.allowCompoundWords": true,
        "eslint.validate": [
          "javascript",
          "javascriptreact",
          "typescript",
          "typescriptreact",
          "vue",
          "html",
          "markdown",
          "json",
          "jsonc",
          "yaml",
          "toml",
          "xml",
          "gql",
          "graphql",
          "astro",
          "svelte",
          "css",
          "less",
          "scss",
          "pcss",
          "postcss"
        ]
      }
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    8000,
    8080
  ],
  // [Optional] To reuse of your local HTTPS dev cert:
  //
  // 1. Export it locally using this command:
  //    * Windows PowerShell:
  //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //    * macOS/Linux terminal:
  //        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
  //
  // 2. Uncomment these 'remoteEnv' lines:
  // "remoteEnv": {
  //     "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
  //     "ASPNETCORE_Kestrel__Certificates__Default__Path": "/root/.aspnet/https/aspnetapp.pfx",
  // },
  //
  // 3. Do one of the following depending on your scenario:
  //    * When using GitHub Codespaces and/or Remote - Containers:
  //      1. Start the container
  //      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
  //      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
  //
  //    * If only using Remote - Containers with a local container, uncomment this line instead:
  //      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],
  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "bash ./.devcontainer/ubuntu-create-dotnet-devcert.sh",
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "root",
  // https://code.visualstudio.com/remote/advancedcontainers/persist-bash-history
  "mounts": [
    "source=projectname-bashhistory,target=/commandhistory,type=volume"
  ]
}
