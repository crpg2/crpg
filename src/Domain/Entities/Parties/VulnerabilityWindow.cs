namespace Crpg.Domain.Entities.Parties;
public class VulnerabilityWindow
{
    public List<RegionVulnerability> VulnerabilityTimes { get; } = new()
    {
        new() { Region = Region.Eu, Hours = new() { 18, 19, 20, 21 } },
        new() { Region = Region.Na, Hours = new() { 23, 0, 1, 2 } },
        new() { Region = Region.As, Hours = new() { 12, 13, 14, 15 } },
        new() { Region = Region.Oc, Hours = new() { 9, 10, 11, 12 } },
    };

    public bool AddOrUpdate(Region region, List<int> hours)
    {
        var existing = VulnerabilityTimes.FirstOrDefault(v => v.Region == region);
        if (existing != null)
        {
            existing.Hours = hours.Distinct().OrderBy(h => h).ToList();
            return false;
        }

        VulnerabilityTimes.Add(new RegionVulnerability
        {
            Region = region,
            Hours = hours.Distinct().OrderBy(h => h).ToList(),
        });
        return true;
    }

    public bool Remove(Region region)
    {
        var match = VulnerabilityTimes.FirstOrDefault(v => v.Region == region);
        return match != null && VulnerabilityTimes.Remove(match);
    }

    public RegionVulnerability Get(Region region)
    {
        return VulnerabilityTimes.FirstOrDefault(v => v.Region == region);
    }

    public Dictionary<Region, RegionVulnerability> AsDictionary()
    {
        return VulnerabilityTimes.ToDictionary(v => v.Region);
    }

    public class RegionVulnerability
    {
        public int Id { get; set; }
        public Region Region { get; set; }
        public List<int> Hours { get; set; } = new();
    }
}
